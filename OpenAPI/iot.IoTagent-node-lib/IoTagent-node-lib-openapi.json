{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Copyright",
    "description": "TODO: Add a description"
  },
  "host": "idas.lab.fiware.org",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/services": {
      "get": {
        "description": "With Fiware-ServicePath you can retrieve a subservice or all subservices.\n+ Parameters [limit, offset, resource]\n    + `limit` (optional, number). In order to specify the maximum number of services (default is 20, maximun allowed is 1000).\n    + `offset` (optional, number). In order to skip a given number of elements at the beginning (default is 0) .\n    + `resource` (optional, string). URI for the iotagent, return only services for this iotagent.",
        "summary": "Retrieve a service",
        "tags": [
          "Configuration API"
        ],
        "operationId": "Retrieve a service",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-Service",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-ServicePath",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "device",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RetrieveAServiceResponse"
            },
            "examples": {
              "application/json": {
                "count": 1,
                "services": [
                  {
                    "apikey": "apikey3",
                    "service": "service2",
                    "service_path": "/srvpath2",
                    "token": "token2",
                    "cbroker": "http://127.0.0.1:1026",
                    "entity_type": "thing",
                    "resource": "/iot/d"
                  }
                ]
              }
            }
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/services",
              "headers": {
                "Content-Type": "application/json",
                "Fiware-Service": "testservice",
                "Fiware-ServicePath": "/*"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {},
              "body": "{  \"count\": 1,  \"services\": [    {        \"apikey\": \"apikey3\",        \"service\": \"service2\",        \"service_path\": \"/srvpath2\",        \"token\": \"token2\",        \"cbroker\": \"http://127.0.0.1:1026\",        \"entity_type\": \"thing\",        \"resource\": \"/iot/d\"    }  ]}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Retrieve a service1",
            "x-testDescription": "With Fiware-ServicePath you can retrieve a subservice or all subservices.\n+ Parameters [limit, offset, resource]\n    + `limit` (optional, number). In order to specify the maximum number of services (default is 20, maximun allowed is 1000).\n    + `offset` (optional, number). In order to skip a given number of elements at the beginning (default is 0) .\n    + `resource` (optional, string). URI for the iotagent, return only services for this iotagent."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "If you want modify only a field, you can do it. You cannot modify an element into an array field, but whole array. (\"/*\" is not allowed).\n+ Parameters [apikey, resource]\n    + `apikey` (optional, string). If you don't specify, apikey=\" \" is applied.\n    + `resource` (mandatory, string). URI for service into iotagent.",
        "summary": "Update a service/subservice",
        "tags": [
          "Configuration API"
        ],
        "operationId": "Update a service/subservice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-Service",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-ServicePath",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateAService~1subserviceRequest"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "device",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/services",
              "headers": {
                "Content-Type": "application/json",
                "Fiware-Service": "testservice",
                "Fiware-ServicePath": "/TestSubservice"
              },
              "body": "{   \"entity_type\": \"entity_type\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Update a service/subservice1",
            "x-testDescription": "If you want modify only a field, you can do it. You cannot modify an element into an array field, but whole array. (\"/*\" is not allowed).\n+ Parameters [apikey, resource]\n    + `apikey` (optional, string). If you don't specify, apikey=\" \" is applied.\n    + `resource` (mandatory, string). URI for service into iotagent."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "With one subservice defined in Fiware-ServicePath header. From service model, mandatory fields are: apikey, resource (cbroker field is temporary mandatory).",
        "summary": "Create a service",
        "tags": [
          "Configuration API"
        ],
        "operationId": "Create a service",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-Service",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-ServicePath",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAServiceRequest"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "device",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/services",
              "headers": {
                "Content-Type": "application/json",
                "Fiware-Service": "testservice",
                "Fiware-ServicePath": "/TestSubservice"
              },
              "body": "{  \"services\": [    {      \"apikey\": \"apikey3\",      \"token\": \"token2\",      \"cbroker\": \"http://127.0.0.1:1026\",      \"entity_type\": \"thing\",      \"resource\": \"/iot/d\"    }   ] }"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Create a service1",
            "x-testDescription": "With one subservice defined in Fiware-ServicePath header. From service model, mandatory fields are: apikey, resource (cbroker field is temporary mandatory)."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "You remove a subservice into a service. If Fiware-ServicePath is '/*' or '/#' remove service and all subservices.\n+ Parameters [apikey, resource, device]\n    + `apikey` (optional, string). If you don't specify, apikey=\"\" is applied.\n    + `resource` (mandatory, string). URI for service into iotagent.\n    + `device` (optional, boolean). Default value is false. Remove devices in service/subservice. This parameter is not valid when Fiware-ServicePath is '/*' or '/#'.",
        "summary": "Remove a subservice/service",
        "tags": [
          "Configuration API"
        ],
        "operationId": "Remove a subservice/service",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-Service",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-ServicePath",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "device",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/services",
              "headers": {
                "Content-Type": "application/json",
                "Fiware-Service": "testservice",
                "Fiware-ServicePath": "/TestSubservice"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Remove a subservice/service1",
            "x-testDescription": "You remove a subservice into a service. If Fiware-ServicePath is '/*' or '/#' remove service and all subservices.\n+ Parameters [apikey, resource, device]\n    + `apikey` (optional, string). If you don't specify, apikey=\"\" is applied.\n    + `resource` (mandatory, string). URI for service into iotagent.\n    + `device` (optional, boolean). Default value is false. Remove devices in service/subservice. This parameter is not valid when Fiware-ServicePath is '/*' or '/#'."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/devices": {
      "get": {
        "description": "+ Parameters [limit, offset, detailed, entity, protocol]\n    + `limit` (optional, number). In order to specify the maximum number of devices (default is 20, maximun allowed is 1000).\n    + `offset` (optional, number). In order to skip a given number of elements at the beginning (default is 0) .\n    + `detailed` (optional, string). `on` return all device information, `off` (default) return only name.\n    + `entity` (optional, string). It allows get a device from entity name.\n    + `protocol` (optional, string). It allows get devices with this protocol.",
        "summary": "Retrieve all devices",
        "tags": [
          "Configuration API"
        ],
        "operationId": "Retrieve all devices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-Service",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-ServicePath",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "detailed",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RetrieveAllDevicesResponse"
            },
            "examples": {
              "application/json": {
                "count": 1,
                "devices": [
                  {
                    "device_id": "device_id",
                    "protocol": "12345",
                    "entity_name": "entity_name",
                    "entity_type": "entity_type",
                    "timezone": "America/Santiago",
                    "attributes": [
                      {
                        "object_id": "source_data",
                        "name": "attr_name",
                        "type": "int"
                      }
                    ],
                    "static_attributes": [
                      {
                        "name": "att_name",
                        "type": "string",
                        "value": "value"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/devices",
              "headers": {
                "Content-Type": "application/json",
                "Fiware-Service": "testService",
                "Fiware-ServicePath": "/TestSubservice"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {},
              "body": "   {      \"count\": 1,      \"devices\": [        {          \"device_id\": \"device_id\",          \"protocol\": \"12345\",          \"entity_name\": \"entity_name\",          \"entity_type\": \"entity_type\",          \"timezone\": \"America/Santiago\",          \"attributes\": [            {              \"object_id\": \"source_data\",              \"name\": \"attr_name\",              \"type\": \"int\"            }          ],          \"static_attributes\": [            {              \"name\": \"att_name\",              \"type\": \"string\",              \"value\": \"value\"            }          ]        }      ]    }"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Retrieve all devices1",
            "x-testDescription": "+ Parameters [limit, offset, detailed, entity, protocol]\n    + `limit` (optional, number). In order to specify the maximum number of devices (default is 20, maximun allowed is 1000).\n    + `offset` (optional, number). In order to skip a given number of elements at the beginning (default is 0) .\n    + `detailed` (optional, string). `on` return all device information, `off` (default) return only name.\n    + `entity` (optional, string). It allows get a device from entity name.\n    + `protocol` (optional, string). It allows get devices with this protocol."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "From device model, mandatory fields are: device_id and protocol.",
        "summary": "Create a device",
        "tags": [
          "Configuration API"
        ],
        "operationId": "Create a device",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-Service",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-ServicePath",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateADeviceRequest"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "detailed",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "string"
            },
            "examples": {
              "text/plain": "+ Headers (only if ONE device is in request)        Location: /iot/devices/device_id"
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "schema": {
              "$ref": "#/definitions/CreateADevice400Response"
            },
            "examples": {
              "application/json": {
                "reason": "parameter limit must be an integer"
              }
            }
          },
          "404": {
            "description": "",
            "schema": {}
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/devices",
              "headers": {
                "Content-Type": "application/json",
                "Fiware-Service": "testservice",
                "Fiware-ServicePath": "/TestSubservice"
              },
              "body": "   {        \"devices\": [        {          \"device_id\": \"device_id\",          \"protocol\": \"12345\",          \"entity_name\": \"entity_name\",          \"entity_type\": \"entity_type\",          \"timezone\": \"America/Santiago\",          \"attributes\": [            {              \"object_id\": \"source_data\",              \"name\": \"attr_name\",              \"type\": \"int\"            }          ],          \"static_attributes\": [            {              \"name\": \"att_name\",              \"type\": \"string\",              \"value\": \"value\"            }          ]        }        ]    }"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {},
              "body": "+ Headers (only if ONE device is in request)        Location: /iot/devices/device_id"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Create a device1",
            "x-testDescription": "From device model, mandatory fields are: device_id and protocol."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/devices/{device_id}": {
      "get": {
        "description": "",
        "summary": "Retrieve a device",
        "tags": [
          "Configuration API"
        ],
        "operationId": "Retrieve a device",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-Service",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-ServicePath",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RetrieveADeviceResponse"
            },
            "examples": {
              "application/json": {
                "device_id": "device_id",
                "protocol": "121345",
                "entity_name": "entity_name",
                "entity_type": "entity_type",
                "timezone": "America/Santiago",
                "attributes": [
                  {
                    "object_id": "source_data",
                    "name": "attr_name",
                    "type": "int"
                  }
                ],
                "static_attributes": [
                  {
                    "name": "att_name",
                    "type": "string",
                    "value": "value"
                  }
                ]
              }
            }
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/devices/{device_id}",
              "headers": {
                "Content-Type": "application/json",
                "Fiware-Service": "testservice",
                "Fiware-ServicePath": "/TestSubservice"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "RAW",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {},
              "body": "{  \"device_id\": \"device_id\",  \"protocol\": \"121345\",  \"entity_name\": \"entity_name\",  \"entity_type\": \"entity_type\",  \"timezone\": \"America/Santiago\",  \"attributes\": [    {      \"object_id\": \"source_data\",      \"name\": \"attr_name\",      \"type\": \"int\"    }  ],  \"static_attributes\": [    {      \"name\": \"att_name\",      \"type\": \"string\",      \"value\": \"value\"    }  ]}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Retrieve a device1",
            "x-testDescription": "Testcase for testing endpoint Retrieve a device"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "If you want modify only a field, you can do it, except field `protocol` (this field, if provided it is removed from request).",
        "summary": "Update a device",
        "tags": [
          "Configuration API"
        ],
        "operationId": "Update a device",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-Service",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-ServicePath",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateADeviceRequest"
            }
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/devices/{device_id}",
              "headers": {
                "Content-Type": "application/json",
                "Fiware-Service": "testservice",
                "Fiware-ServicePath": "/TestSubservice"
              },
              "body": "{   \"entity_name\": \"entity_name\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Update a device1",
            "x-testDescription": "If you want modify only a field, you can do it, except field `protocol` (this field, if provided it is removed from request)."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "If specific device is not found, we work as deleted.",
        "summary": "Remove a device",
        "tags": [
          "Configuration API"
        ],
        "operationId": "Remove a device",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-Service",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Fiware-ServicePath",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/devices/{device_id}",
              "headers": {
                "Content-Type": "application/json",
                "Fiware-Service": "testservice",
                "Fiware-ServicePath": "/TestSubservice"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Remove a device1",
            "x-testDescription": "If specific device is not found, we work as deleted."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "RetrieveAServiceResponse": {
      "title": "Retrieve a service response",
      "example": {
        "count": 1,
        "services": [
          {
            "apikey": "apikey3",
            "service": "service2",
            "service_path": "/srvpath2",
            "token": "token2",
            "cbroker": "http://127.0.0.1:1026",
            "entity_type": "thing",
            "resource": "/iot/d"
          }
        ]
      },
      "type": "object",
      "properties": {
        "count": {
          "description": "",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "services": {
          "description": "",
          "example": [
            {
              "apikey": "apikey3",
              "service": "service2",
              "service_path": "/srvpath2",
              "token": "token2",
              "cbroker": "http://127.0.0.1:1026",
              "entity_type": "thing",
              "resource": "/iot/d"
            }
          ],
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "count",
        "services"
      ]
    },
    "CreateAServiceRequest": {
      "title": "Create a service request",
      "example": {
        "services": [
          {
            "apikey": "apikey3",
            "token": "token2",
            "cbroker": "http://127.0.0.1:1026",
            "entity_type": "thing",
            "resource": "/iot/d"
          }
        ]
      },
      "type": "object",
      "properties": {
        "services": {
          "description": "",
          "example": [
            {
              "apikey": "apikey3",
              "token": "token2",
              "cbroker": "http://127.0.0.1:1026",
              "entity_type": "thing",
              "resource": "/iot/d"
            }
          ],
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "services"
      ]
    },
    "UpdateAService/subserviceRequest": {
      "title": "Update a service/subservice request",
      "example": {
        "entity_type": "entity_type"
      },
      "type": "object",
      "properties": {
        "entity_type": {
          "description": "",
          "example": "entity_type",
          "type": "string"
        }
      },
      "required": [
        "entity_type"
      ]
    },
    "RetrieveAllDevicesResponse": {
      "title": "Retrieve all devices response",
      "example": {
        "count": 1,
        "devices": [
          {
            "device_id": "device_id",
            "protocol": "12345",
            "entity_name": "entity_name",
            "entity_type": "entity_type",
            "timezone": "America/Santiago",
            "attributes": [
              {
                "object_id": "source_data",
                "name": "attr_name",
                "type": "int"
              }
            ],
            "static_attributes": [
              {
                "name": "att_name",
                "type": "string",
                "value": "value"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "count": {
          "description": "",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "devices": {
          "description": "",
          "example": [
            {
              "device_id": "device_id",
              "protocol": "12345",
              "entity_name": "entity_name",
              "entity_type": "entity_type",
              "timezone": "America/Santiago",
              "attributes": [
                {
                  "object_id": "source_data",
                  "name": "attr_name",
                  "type": "int"
                }
              ],
              "static_attributes": [
                {
                  "name": "att_name",
                  "type": "string",
                  "value": "value"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "count",
        "devices"
      ]
    },
    "CreateADeviceRequest": {
      "title": "Create a device request",
      "example": {
        "devices": [
          {
            "device_id": "device_id",
            "protocol": "12345",
            "entity_name": "entity_name",
            "entity_type": "entity_type",
            "timezone": "America/Santiago",
            "attributes": [
              {
                "object_id": "source_data",
                "name": "attr_name",
                "type": "int"
              }
            ],
            "static_attributes": [
              {
                "name": "att_name",
                "type": "string",
                "value": "value"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "example": [
            {
              "device_id": "device_id",
              "protocol": "12345",
              "entity_name": "entity_name",
              "entity_type": "entity_type",
              "timezone": "America/Santiago",
              "attributes": [
                {
                  "object_id": "source_data",
                  "name": "attr_name",
                  "type": "int"
                }
              ],
              "static_attributes": [
                {
                  "name": "att_name",
                  "type": "string",
                  "value": "value"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "devices"
      ]
    },
    "CreateADevice400Response": {
      "title": "Create a device 400 response",
      "example": {
        "reason": "parameter limit must be an integer"
      },
      "type": "object",
      "properties": {
        "reason": {
          "description": "",
          "example": "parameter limit must be an integer",
          "type": "string"
        }
      },
      "required": [
        "reason"
      ]
    },
    "RetrieveADeviceResponse": {
      "title": "Retrieve a device response",
      "example": {
        "device_id": "device_id",
        "protocol": "121345",
        "entity_name": "entity_name",
        "entity_type": "entity_type",
        "timezone": "America/Santiago",
        "attributes": [
          {
            "object_id": "source_data",
            "name": "attr_name",
            "type": "int"
          }
        ],
        "static_attributes": [
          {
            "name": "att_name",
            "type": "string",
            "value": "value"
          }
        ]
      },
      "type": "object",
      "properties": {
        "device_id": {
          "description": "",
          "example": "device_id",
          "type": "string"
        },
        "protocol": {
          "description": "",
          "example": "121345",
          "type": "string"
        },
        "entity_name": {
          "description": "",
          "example": "entity_name",
          "type": "string"
        },
        "entity_type": {
          "description": "",
          "example": "entity_type",
          "type": "string"
        },
        "timezone": {
          "description": "",
          "example": "America/Santiago",
          "type": "string"
        },
        "attributes": {
          "description": "",
          "example": [
            {
              "object_id": "source_data",
              "name": "attr_name",
              "type": "int"
            }
          ],
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "static_attributes": {
          "description": "",
          "example": [
            {
              "name": "att_name",
              "type": "string",
              "value": "value"
            }
          ],
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "device_id",
        "protocol",
        "entity_name",
        "entity_type",
        "timezone",
        "attributes",
        "static_attributes"
      ]
    },
    "UpdateADeviceRequest": {
      "title": "Update a device request",
      "example": {
        "entity_name": "entity_name"
      },
      "type": "object",
      "properties": {
        "entity_name": {
          "description": "",
          "example": "entity_name",
          "type": "string"
        }
      },
      "required": [
        "entity_name"
      ]
    }
  }
}