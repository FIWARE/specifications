<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>fiware-ngsiv2-cookbook</title>
</head>
<body>
  <script src="https://api.apiary.io/seeds/embed.js"></script>
  <script>
    var embed = new Apiary.Embed({
      apiBlueprint: "FORMAT: 1A\nHOST: http://fiware-ngsi2.apiblueprint.org/\n\n# FIWARE-NGSI Simple API (v2) Cookbook\n\nFIWARE-NGSI Simple API (v2) Cookbook.\n\nThis is a cookbook with recipes that show how to use FIWARE-NGSI v2 aka FIWARE-NGSI Simple API.\nUse this examples for learning and enjoy!\n\nThis is a work in progress and is changing on a daily basis.\nPlease send your comments to fiware-ngsi@lists.fiware.org. You can\ntrace the discussions checking the archives of the mailing list:\nhttps://lists.fiware.org/private/fiware-ngsi/ (list subscription\nrequired).\n\nPlease check the following [FIWARE Open Specification Legal Notice (implicit patents license)]\n(http://forge.fiware.org/plugins/mediawiki/wiki/fiware/index.php/FI-WARE_Open_Specification_Legal_Notice_(implicit_patents_license))\nto understand the rights to use this document.\n\n# Group API Root\n\nThis resource allows you to obtain a list of subresources published by the API:\n\n* entities to deal with your NGSI entities\n* types to deal with your entity types\n* subscriptions to deal with subscriptions to context changes\n* registrations to deal with context data by registering external providers\n\n### Retrieve entry points [GET /v2]\n\n+ Response 200 (application/json)\n\n        {\n            \"entities_url\":      \"/v2/entities\",\n            \"types_url\":         \"/v2/types\",\n            \"subscriptions_url\": \"/v2/subscriptions\",\n            \"registrations_url\": \"/v2/registrations\"\n        }\n\n# Group Entity Collection\n\n## List all entities [/v2/entities]\n\n### Normalized mode [GET /v2/entities]\n\n+ Response 200 (application/json)\n\n      [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": {\n               \"value\": 35.6,\n               \"type\":  \"urn:ogc:def:phenomenon:temperature\",\n               \"metadata\": {\n                   \"accuracy\": {\n                       \"type\": \"none\",\n                       \"value\": 0.1\n                   }\n               }\n            }\n         },\n         {\n            \"type\": \"Car\",\n            \"id\":   \"abc345fg\",\n            \"speed\": {\n                \"value\":    14.7,\n                \"type\":     \"none\",\n                \"metadata\": { }\n            }\n         }\n      ]\n\n\n### Key values mode [GET /v2/entities?options=keyValues]\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": 35.6\n         },\n         {\n            \"type\": \"Car\",\n            \"id\": \"abc345fg\",\n            \"speed\": 14.7\n         }\n        ]\n\n### Pagination [GET /v2/entities{?limit,offset,options}]\n\n+ Parameters\n    + options: count\n    + limit: 2\n    + offset: 2\n\n+ Response 200 (application/json)\n\n    + Headers\n\n            X-Total-Count: 30\n            Link: http://example.org/v2/entities?offset=4&limit=2; rel=\"next\", http://example.org/v2/entities?offset=28&limit=2; rel=\"last\",\n            http://example.org/v2/entities?offset=0&limit=2; rel=\"first\", http://example.org/v2/entities?offset=2&limit=2; rel=\"prev\"\n\n    + Body\n\n      [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": {\n               \"value\": 35.6,\n               \"type\": \"urn:ogc:def:phenomenon:temperature\",\n               \"metadata\": {\n                   \"accuracy\": {\n                       \"type\":  \"none\",\n                       \"value\": 0.1\n                   }\n               }\n            }\n         },\n         {\n            \"type\": \"Car\",\n            \"id\": \"abc345fg\",\n            \"speed\": {\n                \"value\"   : 14.7,\n                \"type\"    : \"none\",\n                \"metadata\": { }\n            }\n         }\n      ]\n\n\n## Filter entities [/v2/entities{?id}]\n\n### By id [GET /v2/entities{?id,options}]\n\n+ Parameters\n    + id: DC_S1_D41 (optional, string) - Only retrieve entities with this id\n    + options: keyValues (optional, string) - rendering options\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": 35.6\n         }\n        ]\n\n### By type [GET /v2/entities{?type}]\n\n+ Parameters\n    + type: Room (optional, string) - Only retrieve entities of this type\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": {\n               \"value\": 35.6,\n               \"type\": \"urn:ogc:def:phenomenon:temperature\",\n               \"metadata\": {\n                   \"accuracy\": {\n                       \"type\":  \"none\",\n                       \"value\": 0.1\n                   }\n               }\n            }\n         },\n         {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": {\n               \"value\": 22,\n               \"type\": \"urn:ogc:def:phenomenon:temperature\",\n               \"metadata\": { }\n            }\n         }\n        ]\n\n### By id list [GET /v2/entities{?id,options}]\n\n+ Parameters\n    + id: DC_S1_D41, Boe_Idearium (optional, string) - Id list with the entities to be retrieved\n    + options: keyValues (optional, string) - rendering options\n    \n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": 35.6\n         },\n         {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": 22.5\n         }\n        ]\n\n\n### By type list [GET /v2/entities{?type}]\n\n+ Parameters\n    + type: ParkingLot, StreetParking (optional, string) - Type list\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"ParkingLot\",\n            \"id\": \"P12345-A\",\n            \"name\": {\n               \"value\":    \"Marques de Pombal\",\n               \"type\":     \"string\",\n               \"metadata\": { }\n            },\n            \"availableSpotNumber\": {\n              \"value\":    111,\n              \"type\":     \"number\",\n              \"metadata\": { }\n            },\n            \"totalSpotNumber\": {\n              \"value\":    250,\n              \"type\":     \"number\",\n              \"metadata\": { }\n            },\n            \"lastEntrance\": {\n               \"value\":    \"2015-11-26T11:45:12.398Z\",\n               \"type\":     \"date\",\n               \"metadata\": { }\n            },\n            \"location\": {\n              \"type\":  \"geo:point\",\n              \"value\": \"40.6378754,-8.6370621\",\n              \"metadata\": {\n                \"crs\": {\n                  \"type\":  \"urn:ogc:def:crs\",\n                  \"value\": \"EPSG::4326\"\n                }\n              } \n            }\n         },\n         {\n            \"type\": \"StreetParking\",\n            \"id\": \"A45678\",\n            \"availableSpotNumber\": {\n              \"value\":     11,\n              \"type\":      \"number\",\n              \"metadata\": { }\n            },\n            \"totalSpotNumber\": {\n              \"value\":    20,\n              \"type\":     \"number\",\n              \"metadata\": { }\n            },\n            \"location\": {\n              \"type\": \"geo:polygon\",\n              \"value\": [\n                \"40.64125502310924,-8.653267621994019\",\n                \"40.64123059990093,-8.652441501617432\",\n                \"40.64147483158176,-8.650263547897339\",\n                \"40.64125502310924,-8.653267621994019\"\n              ],\n              \"metadata\": { } \n            }\n         }\n        ]\n\n### By pattern matching [GET /v2/entities{?idPattern,options}]\n\n+ Parameters\n    + idPattern: DC_.* (optional, string) - Only retrieve entities having a matching id.\n    + options: keyValues (optional, string) - rendering options\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"DC_S1_D41\",\n            \"temperature\": 35.6\n         }\n        ]\n\n# Group Context Entity\n\n## Retrieve entity data [/v2/entities/{entityId}]\n\n### By Id [GET /v2/entities/{entityId}{?options}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity Id.\n    + options: keyValues (optional, string) - rendering options\n\n+ Response 200 (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn_Welt\",\n            \"temperature\": 21.7,\n            \"humidity\": 60\n        }\n\n### By Id. Not exists [GET /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity Id.\n\n+ Response 404 (application/json)\n\n        {\n            \"error\": \"NotFound\",\n            \"description\": \"There is no entity with such an id\"\n        }\n\n### By id and type [GET /v2/entities/{entityId}{?type,options}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n    + type: Room (required, string) - Entity Type\n    + options: keyValues (optional, string) - rendering options\n\n+ Response 200 (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": 22.5\n        }\n\n## Partial entity retrieval [/v2/entities/{entityId}{?attrs}]\n\n### One entity attribute [GET /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrs: temperature (optional, string) - Attribute to be retrieved\n\n+ Response 200 (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": {\n              \"value\":    22.7,\n              \"type\":     \"urn:ogc:def:phenomenon:temperature\",\n              \"metadata\": { }\n            }\n        }\n\n### One entity attribute. Not present [GET /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrs: mistake (optional, string) - Attribute to be retrieved\n\n+ Response 200 (application/json)\n\n        {\n           \"type\": \"Room\",\n           \"id\": \"Boe_Idearium\"\n        }\n\n### Several entity attributes [GET /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: \'Bcn_Welt\' (required, string) - Entity ID\n    + attrs: temperature, humidity (optional, string) - Attributes to be retrieved. Coma separated list.\n\n+ Response 200 (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Boe_Idearium\",\n            \"temperature\": {\n              \"value\": 22.7,\n              \"type\": \"urn:ogc:def:phenomenon:temperature\",\n              \"metadata\": { }\n            },\n            \"humidity\": {\n              \"value\": 60,\n              \"type\": \"urn:x-ogc:def:phenomenon:OGC:Humidity\",\n              \"metadata\": { }\n            }\n        }\n            \n# Group Query Context\n\n## Query Entities [/v2/entities{?q,type,limit,offset,georel,coords,geometry,attrs,options}]\n\n### Query by attribute content [GET /v2/entities{?q,limit,offset,attrs,options}]\n\n+ Parameters\n    + q: temperature==22.5;humidity==60 (optional, string) - General query parameter that allows\n    to filter by attribute content. \n    + limit: 20 - Limit the number of results (optional, number) - Maximum number of results to return\n    + attrs: seatsNumber (optional, string) - Attributes to be returned\n    + options: keyValues (optional, string) - query options (`keyValues` mode)\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"seatsNumber\": 15\n         }\n        ]\n\n### Query by distance to a certain point [GET /v2/entities{?type,coords,georel,geometry,options}]\n\n+ Parameters\n    + type: WeatherStation (optional, string) - Entity type requested.\n    + coords: 41.3763726, 2.1864475 (optional, string) - Coordinates of the reference point.\n    + geometry: point (optional, string) - Geometry (point, line, polygon) represented by the `coords` parameter. \n    + georel: near;maxDistance:1000 (optional, string) - Geospatial relationship.\n    This example refers to those entities located at a maximum distance of 1000 meters from the reference point.\n    + options: keyValues (optional, string) - query options (`keyValues` mode)\n\n+ Response 200 (application/json)\n\n        [\n         {\n            \"type\": \"WeatherStation\",\n            \"id\": \"AEMET-789\",\n            \"location\": \"43.5,-8.2\"\n         }\n        ]\n\n\n### No results [GET /v2/entities{?q}]\n\n+ Parameters\n    + q: temperature>45 (optional, string) - General query parameter that allows\n    to filter by attribute content\n\n+ Response 200 (application/json)\n\n        []\n\n# Group Provide Context\n\n## Create a new entity [/v2/entities{?options}]\n\n### Normalized mode [POST /v2/entities]\n\n+ Request (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"temperature\": {\n              \"value\": 21.7,\n              \"metadata\": {\n                 \"unitCode\": {\n                    \"value\": \"CEL\"\n                 }\n              }\n            },\n            \"humidity\": {\n              \"value\": 60    \n            },\n            \"address\": {\n              \"value\": {\n                \"addressCountry\":  \"ES\",\n                \"addressLocality\": \"Barcelona\",\n                \"streetAddress\":   \"Diagonal 00\"             \n              },\n              \"type\": \"PostalAddress\"\n            }\n        }\n      \n+ Response 201 (application/json)\n\n    + Headers\n\n            Location: /v2/entities/Bcn-Welt?type=Room\n\n\n### keyValues mode [POST /v2/entities{?options}]\n\n+ Parameters\n    + options: keyValues (optional, string) - operation options (`keyValues` mode)\n\n+ Request (application/json)    \n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"temperature\": 21.7,\n            \"humidity\": 60,\n            \"address\": {\n              \"addressCountry\":  \"ES\",\n              \"addressLocality\": \"Barcelona\",\n              \"streetAddress\":   \"Diagonal 00\"\n            }  \n        }\n\n+ Response 201 (application/json)\n\n    + Headers\n\n            Location: /v2/entities/Bcn-Welt?type=Room\n\n### Georeferencing using simple location format [POST /v2/entities]\n\n+ Request (application/json)\n\n        {\n           \"id\":   \"AEMET-1351\",\n           \"type\": \"WeatherStation\",\n           \"address\": {\n              \"value\": {\n                \"addressCountry\":  \"ES\",\n                \"addressLocality\": \"Mañón\",\n                \"addressRegion\":   \"La Coruña\"\n              }\n           },\n           \"name\": \"Estaca de Bares\",\n           \"location\": {              \n              \"type\":  \"geo:point\",\n              \"value\": \"43.7861, -7.6847\"\n            }\n        }\n\n+ Response 201 (application/json)\n\n    + Headers\n\n            Location: /v2/entities/AEMET-1351?type=WeatherStation\n\n### Georeferencing using GeoJSON [POST /v2/entities]\n\n+ Request (application/json)\n\n        {\n           \"id\":   \"porto-AmbientArea-Boavista\",\n           \"type\": \"AmbientArea\",\n           \"name\": \"Boavista\",\n           \"location\": {              \n              \"type\": \"geo:json\",\n              \"value\": {\n                 \"type\": \"Polygon\",\n                 \"coordinates\": [ [\n                    [ -8.633629796628234, 41.163854282188204 ],\n                    [ -8.630357419242978, 41.165230294132279 ],\n                    [ -8.627010741427831, 41.164981131496575 ],\n                    [ -8.637337472778501, 41.155229636824181 ],\n                    [ -8.637313461931976, 41.158014959877839 ],\n                    [ -8.636775456788547, 41.161148008811146 ],\n                    [ -8.633629796628234, 41.163854282188204 ]\n                 ] ]\n              }\n            }\n        }\n\n+ Response 201 (application/json)\n\n    + Headers\n\n            Location: /v2/entities/porto-AmbientArea-Boavista?type=AmbientArea\n            \n            \n### Creation error. Already exists. [POST /v2/entities?options=keyValues]\n\n+ Request (application/json)\n\n        {\n            \"type\": \"Room\",\n            \"id\": \"Bcn-Welt\",\n            \"temperature\": 21.7\n        }\n\n+ Response 422 (application/json)\n\n        {\n            \"error\": \"AlreadyExists\",\n            \"description\": \"An entity with the same id and type is already present\"\n        }\n\n\n## Remove Entity [/v2/entities/{entityId}]\n\n### By Id [DELETE /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n\n+ Response 204\n\n\n## Manage entity attributes [/v2/entities/{entityId}{?options}]\n\n### Update. Normalized mode. [PATCH /v2/entities/{entityId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Request (application/json)\n\n    + Body\n\n            {\n                \"temperature\": {\n                  \"value\": 21.7,\n                  \"metadata\": {\n                    \"unitCode\": \"CEL\"\n                  }\n                },\n                \"ambientNoise\": {\n                  \"value\": 31.5\n                }\n            }\n\n+ Response 204\n\n### Update. keyValues mode. [PATCH /v2/entities/{entityId}{?options}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + options:  keyValues (optional, string) - operation options (`keyValues` mode)\n\n+ Request (application/json)\n\n    + Body\n\n            {\n                \"temperature\": 21.7,\n                \"ambientNoise\": 31.5\n            }\n\n+ Response 204\n\n\n### Update or append. keyValues mode. [POST /v2/entities/{entityId}{?options}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + options:  keyValues (optional, string) - operation options (`keyValues` mode)\n\n+ Request (application/json)\n\n        {\n            \"temperature\": 25.5,\n            \"seatsNumber\": 6\n        }\n\n+ Response 204\n\n### Remove [DELETE /v2/entities/{entityId}{?attrs}]\n\n+ Parameters\n    + entityId: Boe_Idearium (required, string) - Entity ID\n    + attrs: humidity, seatsNumber - Attribute list\n\n+ Response 204\n\n# Group Context Attributes\n\n## Attribute Collection [/v2/entities/{entityId}/attrs{?options}]\n\n### List all. Normalized Mode. [GET /v2/entities/{entityId}/attrs]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n\n+ Response 200 (application/json)\n\n        {\n            \"temperature\": {\n               \"type\":     \"number\",\n               \"value\":    22.5,\n               \"metadata\": {\n                 \"unitCode\": {\n                    \"type\": \"none\",\n                    \"value\": \"CEL\"\n                 }\n               }\n            },\n            \"humidity\": {\n               \"type\": \"number\",\n               \"value\": 60,\n               \"metadata\": { }\n            },\n            \"location\": {\n              \"type\": \"geo:point\",\n              \"value\": \"41.3763726, 2.1864475\",\n              \"metadata\": { }\n            }\n        }\n\n\n### List all. keyValues Mode. [GET /v2/entities/{entityId}/attrs{?options}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + options: keyValues (optional, string) - flags that payload is in `keyValues`mode.\n\n+ Response 200 (application/json)\n\n        {\n            \"temperature\": 21.7,\n            \"humidity\":    60,\n            \"location\":    \"41.3763726, 2.1864475\"\n        }\n\n        \n### Replace all. keyValues mode [PUT /v2/entities/{entityId}/attrs{?options}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + options: keyValues (optional, string) - flags that payload is in `keyValues`mode.\n\n+ Request (application/json)\n\n        {\n            \"temperature\": 21.7,\n            \"seatsNumber\": 12\n        }\n\n+ Response 200\n        \n\n## Single Attribute [/v2/entities/{entityId}/attrs/{attrName}]\n\n### Get [GET /v2/entities/{entityId}/attrs/{attrName}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: illuminance (required, string) - Attribute name.\n\n+ Response 200 (application/json)\n\n        {\n            \"value\": 300,\n            \"type\": \"number\",\n            \"metadata\": {\n              \"accuracy\": {\n                \"value\": 1.0,\n                \"type\": \"number\"\n              },\n              \"unitCode\": {\n                \"value\": \"LX\",\n                \"type\":  \"none\"\n              }\n            }\n        }\n\n\n### Get. Not exists [GET /v2/entities/{entityId}/attrs/{attrName}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: mistake (required, string) - Attribute name.\n\n+ Response 404 (application/json)\n\n        {\n            \"error\": \"NotFound\",\n            \"description\": \"The entity does not have such an attribute\"\n        }\n        \n\n### Update [PUT /v2/entities/{entityId}/attrs/{attrName}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: temperature (required, string) - Attribute name.\n\n+ Request (application/json)\n\n        {\n            \"value\": 25.0,\n            \"metadata\": {\n               \"unitCode\": \"CEL\"\n            }\n        }\n\n+ Response 200\n\n\n### Remove [DELETE /v2/entities/{entityId}/attrs/{attrName}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: temperature (required, string) - Attribute name.\n\n+ Response 204\n        \n\n## Attribute Value [/v2/entities/{entityId}/attrs/{attrName}/value]\n\n### Get. As text [GET /v2/entities/{entityId}/attrs/{attrName}/value]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: temperature (required, string) - Attribute name.\n    \n+ Request\n\n  + Headers\n\n      Accept: text/plain\n\n+ Response 200 (text/plain)\n\n        300\n\n\n### Get. As JSON [GET /v2/entities/{entityId}/attrs/{attrName}/value]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: temperature (required, string) - Attribute name.\n\n+ Response 200 (application/json)\n\n        {\n            \"value\": 300\n        }\n\n\n### Update. As Text [PUT /v2/entities/{entityId}/attrs/{attrName}/value]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: temperature (required, string) - Attribute name.\n\n+ Request (text/plain)\n\n        25.0\n\n+ Response 200\n\n\n### Update. As JSON [PUT /v2/entities/{entityId}/attrs/{attrName}/value]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - Entity ID\n    + attrName: temperature (required, string) - Attribute name.\n\n+ Request (application/json)\n\n        {\n            \"value\": 25.0\n        }\n\n+ Response 200\n\n\n# Group Subscriptions\n\n### List all subscriptions present in the system [GET /v2/subscriptions]\n\n+ Response 200\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"entity\": {\n                    \"id\": \"Bcn_Welt\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\",\n                    \"condition\": \"ONCHANGE\",\n                    \"throttling\": \"PT5S\"\n                }\n            },\n             {\n                \"id\": \"wyztrew\",\n                \"entity\": {\n                    \"pattern\": \"DC_*\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\"\n            }\n        ]\n\n### Get the details of a subscription [GET /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefg (required, string) - ID of the suscription\n\n+ Response 200\n\n        {\n            \"id\": \"abcdefg\",\n            \"entity\": {\n                \"id\": \"Bcn_Welt\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\",\n                \"condition\": \"ONCHANGE\",\n                \"throttling\": \"PT5S\"\n            }\n        }\n\n### Remove a suscription [DELETE /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefg (required, string) - ID of the suscription\n\n+ Response 204\n\n\n### Create a new subscription [POST /v2/subscriptions]\n\n+ Request (application/json)\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://subscriber.example.com/notify\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /subscriptions/abcde98765\n\n### Partial - Update an existing subscription [PATCH /v2/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + subscriptionId: abcdefgh (required, string) - ID of the suscription\n\n+ Request\n\n        {\n            \"duration\": \"1Y\"\n        }\n\n+ Response 204\n\n### List all subscriptions associated to an entity [GET /v2/entities/{entityId}/subscriptions]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Response 200 (application/json)\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\",\n                    \"condition\": \"ONCHANGE\",\n                    \"throttling\": \"PT5S\"\n                }\n            }\n        ]\n\n\n### Create a new subscription associated to an entity [POST /v2/entities/{entityId}/subscriptions]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Request\n\n        {\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://subscriber.example.com/notify\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /subscriptions/abcd9867hshshs\n\n### Get the details of a subscription associated to an entity [GET /v2/entities/{entityId}/subscriptions/{subscriptionId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n    + subscriptionId: abcdefgh (required, string) - ID of the subscription\n\n+ Response 200 (application/json)\n\n        {\n            \"id\": \"abcdefgh\",\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\",\n                \"condition\": \"ONCHANGE\",\n                \"throttling\": \"PT5S\"\n            }\n        }\n\n\n# Group Registrations\n\n### List all registrations present in the system [GET /v2/registrations]\n\n+ Response 200\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"entity\": {\n                    \"id\": \"Bcn_Welt\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\"\n                }\n            },\n             {\n                \"id\": \"wyztrew\",\n                \"entity\": {\n                    \"pattern\": \"DC_*\",\n                    \"type\": \"Room\"\n                },\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\"\n            }\n        ]\n\n### Get the details of a registration [GET /v2/subscriptions/{registrationId}]\n\n+ Parameters\n    + registrationId: abcdefg (required, string) - ID of the registration\n\n+ Response 200\n\n        {\n            \"id\": \"abcdefg\",\n            \"entity\": {\n                \"id\": \"Bcn_Welt\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n        }\n\n### Create a new registration [POST /v2/registrations]\n\n+ Request\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://provider.example.com/provide\"\n        }\n\n+ Response 201 (application/json)\n\n    + Headers\n\n            Location: /registrations/abcde98765\n\n### Partial update an existing registration [PATCH /v2/registration/{registrationId}]\n\n+ Parameters\n    + registrationId: r1234avfd (required, string) - ID of the registration\n\n+ Request\n\n        {\n            \"duration\": \"1Y\"\n        }\n\n+ Response 204\n\n### Full update of an existing registration [PUT /v2/registration/{registrationId}]\n\n+ Parameters\n    + registrationId: r1234avfd (required, string) - ID of the registration\n\n+ Request\n\n        {\n            \"entity\": {\n                \"pattern\": \"Boe_*\",\n                \"type\": \"Room\"\n            },\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://provider2.example.com/provide\"\n        }\n\n+ Response 204\n\n### Remove a registration [DELETE /v2/registrations/{registrationId}]\n\n+ Parameters\n    + registrationId: abcdefg (required, string) - ID of the registration\n\n+ Response 204\n\n### List all registrations associated to an entity [GET /v2/entities/{entityId}/registrations]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Response 200 (application/json)\n\n        [\n            {\n                \"id\": \"abcdefg\",\n                \"attributes\": [\n                    \"temperature\"\n                ],\n                \"callback\": \"http://localhost:1234\",\n                \"options\": {\n                    \"duration\": \"1M\"\n                }\n            }\n        ]\n\n\n### Create a new registration associated to an entity [POST /v2/entities/{entityId}/registrations]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n\n+ Request\n\n        {\n            \"attributes\": [\n                \"humidity\"\n            ],\n            \"callback\": \"http://provider.example.com/provide\"\n        }\n\n+ Response 201\n\n    + Headers\n\n            Location: /registration/abcd9867hshshs\n\n### Get the details of a registration associated to an entity [GET /v2/entities/{entityId}/registrations/{registrationId}]\n\n+ Parameters\n    + entityId: Bcn_Welt (required, string) - ID of the entity\n    + registrationId: abcdefgh (required, string) - ID of the registration\n\n+ Response 200 (application/json)\n\n        {\n            \"id\": \"abcdefgh\",\n            \"attributes\": [\n                \"temperature\"\n            ],\n            \"callback\": \"http://localhost:1234\",\n            \"options\": {\n                \"duration\": \"1M\"\n            }\n        }\n"
    });
  </script>
</body>
</html>
